"""init

Revision ID: 551e67316442
Revises: 
Create Date: 2017-08-30 01:54:41.787492

"""

# revision identifiers, used by Alembic.
revision = '551e67316442'
down_revision = None
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('PawprintStack',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('mjd', sa.Float(), nullable=True),
    sa.Column('band', sa.String(length=5), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('raw_filename', sa.Text(), nullable=True),
    sa.Column('npy_filename', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('raw', 'ready-to-match', name='pawprint_statuses'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('Tile',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('raw_filename', sa.Text(), nullable=True),
    sa.Column('npy_filename', sa.Text(), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('raw', 'ready-to-tag', 'ready-to-match', 'ready-to-extract-features', 'finished', name='tile_statuses'), nullable=True),
    sa.Column('ogle3_tagged_number', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Tile_name'), 'Tile', ['name'], unique=True)
    op.create_table('__corral_alerted__',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('alert_path', sa.String(length=1000), nullable=True),
    sa.Column('model_table', sa.String(length=1000), nullable=True),
    sa.Column('model_ids', sa.PickleType(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('LightCurves',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tile_id', sa.Integer(), nullable=False),
    sa.Column('hdf_filename', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['tile_id'], ['Tile.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tile_id')
    )
    op.create_table('PawprintStackXTile',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pawprint_stack_id', sa.Integer(), nullable=False),
    sa.Column('tile_id', sa.Integer(), nullable=False),
    sa.Column('npy_filename', sa.Text(), nullable=True),
    sa.Column('matched_number', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('raw', 'ready-to-match', 'matched', name='pxt_statuses'), nullable=True),
    sa.ForeignKeyConstraint(['pawprint_stack_id'], ['PawprintStack.id'], ),
    sa.ForeignKeyConstraint(['tile_id'], ['Tile.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('pawprint_stack_id', 'tile_id', name='_pawprint_tile_uc')
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('PawprintStackXTile')
    op.drop_table('LightCurves')
    op.drop_table('__corral_alerted__')
    op.drop_index(op.f('ix_Tile_name'), table_name='Tile')
    op.drop_table('Tile')
    op.drop_table('PawprintStack')
    ### end Alembic commands ###
